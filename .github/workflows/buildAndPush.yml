name: Build & Push Docker

on:
  # On push to main
  push:
    branches: ["main"]

  # On pull request to main
  # pull_request:
  # branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Github container registry
  REGISTRY: ghcr.io

jobs:
  # The build job
  buildAndPush:
    # runs-on: [self-hosted, linux, ARM64]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      # Checkout the repo
      - uses: actions/checkout@v3
        name: Check out code
        with:
          submodules: recursive
          token: ${{ secrets.PAT }}

      # Setup QEMU for the build
      - uses: docker/setup-qemu-action@v2
        name: Set up QEMU

      # Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to the registry
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push the bot image
      - name: Build and push bot
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ghcr.io/gridscout/gridscout:latest
          platforms: linux/amd64
          build-args: COMMIT_HASH=${{ github.sha }}
          context: .
          file: ./apps/bot/Dockerfile
          cache-from: type=gha,scope=bot
          cache-to: type=gha,scope=bot,mode=max

      # Build and push the cron image
      - name: Build and push cron
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ghcr.io/gridscout/cron:latest
          platforms: linux/amd64
          build-args: COMMIT_HASH=${{ github.sha }}
          context: .
          file: ./apps/cron/Dockerfile
          cache-from: type=gha,scope=cron
          cache-to: type=gha,scope=cron,mode=max
